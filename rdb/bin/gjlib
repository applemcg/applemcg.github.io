xx () {
    awk '
    function tojdn  (yr, mo, da) {

         fmt = "%d\t"
     printf fmt, yr		       
     printf fmt, mo
   		       printf fmt, da
     printf fmt, yalpha( yr, mo)
     printf fmt, mbeta(      mo)
     printf fmt, ybeta(  yr, mo)		       		       
       jd = jdn( yr, mo, da)
     printf fmt, jd
     printf "\n"
     }'
}
gday ()
{
    : test gregporian from julian
    :
    rdb_hdr s J af bf f e g h da D ma M ya yb Y
    awk "$(rdb_awklib cat)"'
          { gregorian( $1 )    }
    '
}
jdn ()
{
    : Julian Day Number, from Gregorian Y, M, D
    : url: https://en.wikipedia.org/wiki/...
    : url: += Julian_day#Converting_Gregorian_calendar_date_to_Julian_Day_Number
    : debug, use these headers
    : rdb_hdr year  month day  mprime mprim2 mbeta yprime yprim2 yalpha ybeta ydmjd nasa diff

    rdb_hdr year  month day jdn

    awk "$(awklib cat)"'
    

    function jdn_testdata () {

    # formerly BEGIN 
        m = 0
	for (y = 1900; y <= 2020; y += 10) {
              
            m %= 12     # cycle thru the months
	    m++         # 1 .. 12
	    d = (y + 3*m) % 29
	    d++
	    jdn( y, m, d)
    	    }
    }
    NF > 2     { tojdn( $1, $2, $3); }
  '
}
julc ()
{
    awk "$(rdb_awklib cat)"'
    BEGIN { print "julc" }
          {
	     print julian( $1 )
	  }
	
    '
}
