: datatype -- type of data in column

read HEAD
case $1 in
    -l)        shift; all=-l;prtrec=print;;
esac

[ $# -lt 1 ] && {
       (echo "$HEAD"; cat ) | $0 $all $HEAD
       exit
       }

( echo "$HEAD"; cat ) | column $* |
{

       read HEAD
       read DASH

       echo "$HEAD"
       [ -n "$all"  ] && echo "$DASH"
       case $0 in
       */*)    function=`basename $0`;;
       *)      function=$0;;
       esac

       awk     '

       BEGIN   { OFS=" " }
       function max(x,y) { return (x>y?x:y) }
       function min(x,y) { return (x<y?x:y) }
       function precision(col) {               # visible
               idec = index($col,".")
               if (idec > 0)
                   _precision[col] = max(_precision[col], length($col)-idec)
       }
       function width(col) {                   # visible
               _width[col] = max(_width[col], length($col))
       }
       function total(col) {                   # visible
               _total[col] += $col
       }
       function mean(col) {                    # visible
               total(col)
               _mean[col] = _total[col]/NR
       }
       function minimum(col) {                 # visible
               _minimum[col] = min(_minimum[col], $col)
       }
       function maximum(col) {                 # visible
               _maximum[col] = min(_maximum[col], $col)
       }
       function datatype(col) {                # visible
               if (_datatype[col] < 0) return
               idec = index($col,".")
               if (idec > 0)
                   _datatype[col] = max(_datatype[col], length($col)-idec)
               else if (int($col) != $col) _datatype[col] = -1
       }
       {
               '"$prtrec"';
               for (i=1; i<=NF; i++)
                       '"$function"'(i)
               n = NF
       }
       END     {
           print "'"$DASH"'"
           for (i=1; i<=n; i++) printf "%d\t", _'"${function}"'[i]
           printf "\n"
       }'


}
